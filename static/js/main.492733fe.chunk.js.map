{"version":3,"sources":["context/AuthContext.js","Login.js","routes.js","Home.js","App.js","index.js"],"names":["session","username","isLogin","storage","localStorage","getItem","JSON","parse","init","setSession","AuthContext","React","createContext","loginReducer","state","action","type","name","value","loading","error","isLoggedIn","password","routes","path","component","props","useContext","console","log","useReducer","dispatch","handleChange","e","target","onClick","style","width","onSubmit","preventDefault","setTimeout","sessionData","loginTime","Date","setItem","stringify","history","push","placeholder","onChange","color","removeItem","App","initSession","useState","Fragment","Provider","basename","map","route","from","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.492733fe.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nlet session = {\r\n  username: '',\r\n  isLogin: false,\r\n}\r\n\r\n// use storage to make the state persist on page-refresh\r\n\r\nconst storage = localStorage.getItem('session')\r\n\r\nif (storage) {\r\n  session = JSON.parse(storage)\r\n}\r\n\r\nconst init = {\r\n  session,\r\n  setSession: () => {}\r\n}\r\n\r\nconst AuthContext = React.createContext(init)\r\n\r\nexport default AuthContext","import React, { useContext, useReducer} from 'react'\r\nimport AuthContext from './context/AuthContext'\r\n\r\nfunction loginReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'INPUT':\r\n      return {\r\n        ...state,\r\n        [action.name]: action.value,\r\n      }\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      }\r\n    case 'ERROR':\r\n      return {\r\n        ...state,\r\n        error: 'Incorrect Username or Password',\r\n        loading: false,\r\n      }\r\n    case 'SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isLoggedIn: true,\r\n        error: '',\r\n      }\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        username: '',\r\n        password: '',\r\n      }\r\n    default: \r\n      return state\r\n  }\r\n}\r\n\r\nconst Login = (props) => {\r\n const { setSession } = useContext(AuthContext)\r\n  console.log(useContext(AuthContext))\r\n  const initState = {\r\n    loading: false,\r\n    username: '',\r\n    password: '',\r\n    error: '',\r\n    isLoggedIn: false,\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(loginReducer, initState);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch({type: 'LOGIN'})\r\n\r\n    setTimeout(() => {\r\n      // do your own server-side login\r\n      if (state.username === 'budi' && state.password === '123') {\r\n        dispatch({type: 'SUCCESS'})\r\n        let sessionData = {\r\n          username: 'budi',\r\n          isLogin: true,\r\n          loginTime: new Date()\r\n        }\r\n        setSession(sessionData)\r\n        localStorage.setItem('session', JSON.stringify(sessionData))\r\n        props.history.push('/home')\r\n      } else {\r\n        dispatch({type: 'ERROR'})\r\n      }\r\n    }, 2000)\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target\r\n    dispatch({type: 'INPUT', name, value})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {state.isLoggedIn ? (\r\n        <>\r\n          <button type=\"button\"\r\n            onClick={() => {\r\n              dispatch({type: 'LOGOUT'})\r\n            }}\r\n          >Logout</button>\r\n        </>\r\n      ) : (\r\n      <fieldset style={{width: 400}}>\r\n        <legend>Login</legend>\r\n        <form onSubmit={onSubmit}>\r\n          <input type=\"text\" placeholder=\"Username\"\r\n            name=\"username\"\r\n            value={state.username}\r\n            onChange={handleChange}\r\n          />\r\n          <input type=\"password\" placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={state.password}\r\n            onChange={handleChange}\r\n          />\r\n          <i style={{color: '#666'}}>Demo: username: budi , password: 123</i>\r\n          <br />\r\n          {state.error && <span style={{color: 'red'}}>{state.error}</span>}\r\n          <br />\r\n          <button>{state.loading ? 'Loading' : 'Login'}</button>\r\n        </form>\r\n      </fieldset>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login","import Login from './Login'\r\nimport Home from './Home'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    component: Login\r\n  },\r\n  {\r\n    path: '/home',\r\n    component: Home\r\n  }\r\n]\r\n\r\nexport default routes","import { useContext } from \"react\"\r\nimport AuthContext from \"./context/AuthContext\"\r\n\r\nconst Home = (props) => {\r\n  const { session, setSession } = useContext(AuthContext)\r\n  const handleLogout = () => {\r\n    setSession({\r\n      username: '',\r\n      isLogin: false\r\n    })\r\n    localStorage.removeItem('session')\r\n    props.history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <fieldset style={{width: 400}}>\r\n      <legend>Welcome, {session.username}</legend>\r\n\r\n      <button onClick={handleLogout}>Logout</button>\r\n    </fieldset>\r\n  )\r\n}\r\n\r\nexport default Home","import React, { useContext, useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom'\nimport routes from './routes'\nimport AuthContext from './context/AuthContext'\n\nconst App = () => {\n  const initSession = useContext(AuthContext)\n  const [session, setSession] = useState(initSession.session)\n  return (\n    <React.Fragment>\n    <blockquote><pre>Global State => {JSON.stringify(session, null, 2)}</pre></blockquote>\n    <AuthContext.Provider value={{session, setSession}}>\n      <Router basename=\"/ReactJS-Global-State/\">\n        <Switch>\n          {routes.map(route => (\n            <Route \n              key={route.path}\n              path={route.path}\n              component={route.component}\n            />\n          ))}\n          <Redirect from=\"/\" to=\"/login\" />\n        </Switch>\n      </Router>\n    </AuthContext.Provider>\n    </React.Fragment>\n  )\n}\n\nexport default App","\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}